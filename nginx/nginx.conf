server {
    listen 80;

    location = /favicon.ico {
       rewrite ^ /favicon.svg;
    }

    # Proxy all other API requests to Node.js
    location /api {
        rewrite ^/api(/.*)$ $1 break;  # Strip `/api` prefix from the URL

        proxy_pass http://app:3000;  # 'app' is the service name in docker-compose
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api-docs {
        auth_basic "Restricted Access";  # Повідомлення для користувачів
        auth_basic_user_file /etc/nginx/.htpasswd;  # Шлях до файлу з паролями

        proxy_pass http://app:3000;  # Проксі для Fastify
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Передача заголовка авторизації
        proxy_set_header Authorization $http_authorization;
    }


    error_page 404 /404.html;

    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    location /static/ {
        root /usr/share/nginx/static;

        try_files $uri $uri/ =404;
    }


    location / {
        root /usr/share/nginx/html;
        index index.html;
    }
}
